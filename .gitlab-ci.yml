---
variables:
  RELEASE_COMMIT_MESSAGE: "chore(release):"

image: node:10.15.1

stages:
  - deps
  - build
  - publish-artifact
  - publish-tag

dependency-fetch:
  stage: deps
  script:
    - npm ci
  artifacts:
    paths:
      - node_modules/
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^$RELEASE_COMMIT_MESSAGE.*/

test:
  # Test uses ts-jest, so it can run in parallel with build
  stage: build
  script: npm test
  dependencies:
    - dependency-fetch
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^$RELEASE_COMMIT_MESSAGE.*/

build:
  stage: build
  script: npm run build
  artifacts:
    paths:
      - dist/
      - dts/
  dependencies:
    - dependency-fetch
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^$RELEASE_COMMIT_MESSAGE.*/

# This should run when semantic-release tags us
deploy-tag:
  stage: publish-artifact
  image: node:10.15.1
  script:
    - npm publish || ( EXIT=$? ; if [ "$EXIT" -ne 0 ]; then cat /root/.npm/_logs/*-debug.log; fi ; exit $EXIT )
  dependencies:
    - build
  only:
    refs:
      - tags@wmatthews/simply-express-controllers
  except:
    refs:
      - master
    variables:
      - $CI_COMMIT_MESSAGE =~ /^$RELEASE_COMMIT_MESSAGE.*/
# WARNING!!! do not allow this to run on your fork
# It will try to push version updates to whatever repo is defined in the package.json repository url
# If you need to test this on your own fork make sure you temporarily point the package.json repository
# to your fork.

### SEMANTIC RELEASE ###

build_release:
  image: node:10.15.1
  stage: publish-tag
  script:
    - npx semantic-release
  # WARNING!!! do not allow this to run on your fork
  # It will try to push version updates to whatever repo is defined in the package.json repository url
  # If you need to test this on your own fork make sure you temporarily point the package.json repository
  # to your fork.
  only:
    refs:
      - master@wmatthews/simply-express-controllers
  except:
    variables:
      - $CI_COMMIT_MESSAGE =~ /^$RELEASE_COMMIT_MESSAGE.*/
